name: CI DevOps 2025

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  # ------------------------------------------------
  # 🧪 Test du backend avec Maven
  # ------------------------------------------------
  test-backend:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build and test with Maven
        run: mvn clean verify --file ./docker_tp/backend/simple-api/pom.xml

  # ------------------------------------------------
  # 🔍 Analyse SonarCloud (Qualité du code)
  # ------------------------------------------------
  sonar-analysis:
    needs: test-backend  # ⭐ Après les tests
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd docker_tp/backend/simple-api
          mvn verify sonar:sonar \
            -Dsonar.projectKey=juniteko_simple-api \
            -Dsonar.organization=juniteko \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  # ------------------------------------------------
  # 🐳 Build et Push des images Docker
  # ------------------------------------------------
  build-and-push-docker-image:
    needs: sonar-analysis  # ⭐ Après SonarCloud
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./docker_tp/backend/simple-api
          file: ./docker_tp/backend/simple-api/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: true

      - name: Build and push database image
        uses: docker/build-push-action@v6
        with:
          context: ./docker_tp/database
          file: ./docker_tp/database/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: true

      - name: Build and push httpd image
        uses: docker/build-push-action@v6
        with:
          context: ./docker_tp/httpd
          file: ./docker_tp/httpd/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: true

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./docker_tp/devops-front
          file: ./docker_tp/devops-front/Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/front:latest
          push: true

  # ------------------------------------------------
  # 🚀 Déploiement avec Ansible
  # ------------------------------------------------
  deploy:
    needs: build-and-push-docker-image  # ⭐ Après le build
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy with Ansible
        run: |
          ansible-playbook -i docker_tp/ansible/inventories/setup.yml docker_tp/ansible/main_playbook.yml